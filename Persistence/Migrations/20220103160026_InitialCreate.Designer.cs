// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220103160026_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("Domain.Application", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("AgreeToTerms")
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrentGrade")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrentSchool")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .HasColumnType("TEXT");

                    b.Property<int>("Grade")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasSibling")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HowDidYouHear")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<int>("LotteryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LotteryStatus")
                        .HasColumnType("TEXT");

                    b.Property<string>("MiddleName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("PrimaryParentEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("PrimaryParentName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PrimaryParentPhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("PrimaryParentRelationship")
                        .HasColumnType("TEXT");

                    b.Property<int>("SchoolId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SchoolYearId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecondaryParentEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondaryParentName")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondaryParentPhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondaryParentRelationship")
                        .HasColumnType("TEXT");

                    b.Property<string>("SiblingName")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("TEXT");

                    b.Property<int>("WaitlistNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Zipcode")
                        .HasColumnType("TEXT");

                    b.HasKey("ApplicationId");

                    b.HasIndex("LotteryId");

                    b.HasIndex("SchoolId");

                    b.HasIndex("SchoolYearId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Domain.Lottery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Grade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SchoolID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SchoolYearId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SchoolID");

                    b.HasIndex("SchoolYearId");

                    b.ToTable("Lotteries");
                });

            modelBuilder.Entity("Domain.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("SchoolName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("Domain.SchoolYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DisplayOnForm")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FormLabel")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActiveYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SchoolYearName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SchoolYears");
                });

            modelBuilder.Entity("Domain.Application", b =>
                {
                    b.HasOne("Domain.Lottery", "Lottery")
                        .WithMany("Applications")
                        .HasForeignKey("LotteryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.School", "School")
                        .WithMany("Applications")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.SchoolYear", "SchoolYear")
                        .WithMany("Applications")
                        .HasForeignKey("SchoolYearId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Lottery");

                    b.Navigation("School");

                    b.Navigation("SchoolYear");
                });

            modelBuilder.Entity("Domain.Lottery", b =>
                {
                    b.HasOne("Domain.School", "School")
                        .WithMany("Lotteries")
                        .HasForeignKey("SchoolID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.SchoolYear", "SchoolYear")
                        .WithMany("Lotteries")
                        .HasForeignKey("SchoolYearId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("School");

                    b.Navigation("SchoolYear");
                });

            modelBuilder.Entity("Domain.Lottery", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("Domain.School", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Lotteries");
                });

            modelBuilder.Entity("Domain.SchoolYear", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Lotteries");
                });
#pragma warning restore 612, 618
        }
    }
}
